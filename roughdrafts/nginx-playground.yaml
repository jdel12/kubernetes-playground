---
apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  labels:
    run: my-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    run: my-nginx
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
spec:
  selector:
    matchLabels:
      run: my-nginx
  replicas: 1
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      volumes:
        - name: html
          emptyDir: {} 
      containers:
      - name: my-nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
#        lifecycle:
#          postStart:
#            exec:
#              command: ["/bin/sh", "-c", "echo */1 * * * * /bin/sh echo crontabworked  >> /etc/crontab"]
      - name: my-nginx-pycron
        image: gcr.io/praxis-atrium-209704/python-enviro-cron:v1
        volumeMounts:
        - name: html
          mountPath: /html
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "python", "-c", "import requests; import pandas; pandas.DataFrame(['testpythondf']).to_html('/html/index.html')"]



#        volumeMounts:
#        - mountPath: /#NEWPATH
#          name: test-index
#  volumes:
#  - name: test-index
#    emptyDir: {}
#
